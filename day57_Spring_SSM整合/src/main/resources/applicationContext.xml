<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--1.开启注解扫描-->
    <!--这里扫描只扫描service包，因为Spring与SpringMVC都要开启注解扫描，不需要重复扫描包-->
    <context:component-scan base-package="com.jinse.service"/>

    <!--2.加载配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--3.创建连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--4.Spring整合Mybatis关键配置：把SqlSessionFactory对象创建交给Spring-->
    <!--
        Spring整合Mybatis关键点
        1.把SqlSessionFactory创建交给Spring
        2.把dao接口的代理的生成也交给Spring
        3.spring加载dao接口所在的包下所有类自动生成代理.
    -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--5.指定dao接口所在包，对dao接口自动生成代理对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jinse.dao"/>
    </bean>

    <!--6.Spring声明事务控制配置-->
    <!--6.1事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--6.2通知规则(指定对方法如何管理事务)-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!--以find开头的方法，事务可有可无，只读-->
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <!--其他方法，必须要有事务环境，读写-->
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>
    <!--6.3Aop配置-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* com.jinse.service.impl.*.*(..))"/>
    </aop:config>
</beans>